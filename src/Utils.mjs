// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml_obj from "rescript/lib/es6/caml_obj.js";
import * as Belt_List from "rescript/lib/es6/belt_List.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";

function cx(names) {
  return Belt_Array.reduce(names, "", (function (acc, c) {
                return acc + " " + c;
              }));
}

function uiList(items, fn) {
  return Belt_Array.map(Belt_List.toArray(items), fn);
}

function uiListWithIndex(items, fn) {
  return Belt_Array.mapWithIndex(Belt_List.toArray(items), fn);
}

function uiStr(text) {
  return text;
}

function noop(param) {
  
}

function noop2(param, param$1) {
  
}

var equals = Caml_obj.caml_equal;

function toggleArrayItem(list, item) {
  var hasItem = Belt_List.has(list, item, equals);
  if (hasItem) {
    return Belt_List.keep(list, (function (i) {
                  return !Caml_obj.caml_equal(i, item);
                }));
  } else {
    return Belt_List.add(list, item);
  }
}

function lastListItem(list) {
  return Belt_List.get(list, Belt_List.size(list) - 1 | 0);
}

function identity(a) {
  return a;
}

function numbersToEmoji(number) {
  switch (number) {
    case 0 :
        return "0️⃣";
    case 1 :
        return "1️⃣";
    case 2 :
        return "2️⃣";
    case 3 :
        return "3️⃣";
    case 4 :
        return "4️⃣";
    case 5 :
        return "5️⃣";
    case 6 :
        return "6️⃣";
    case 7 :
        return "7️⃣";
    case 8 :
        return "8️⃣";
    case 9 :
        return "9️⃣";
    default:
      return numbersToEmoji(number / 10 | 0) + numbersToEmoji(number % 10);
  }
}

var selected = "bg-slate-400";

var unselected = "";

export {
  cx ,
  uiList ,
  uiListWithIndex ,
  uiStr ,
  noop ,
  noop2 ,
  selected ,
  unselected ,
  equals ,
  toggleArrayItem ,
  lastListItem ,
  identity ,
  numbersToEmoji ,
  
}
/* No side effect */
