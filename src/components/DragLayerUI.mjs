// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Utils from "../utils/Utils.mjs";
import * as React from "react";
import * as CardUI from "./CardUI.mjs";
import * as ReactDnd from "../bindings/ReactDnd.mjs";
import * as ReactDnd$1 from "react-dnd";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

var DragObject = {};

var DragLayerCP = {};

var DndL = ReactDnd.MakeUseDragLayer(DragObject, DragLayerCP);

function floatToString($$float) {
  return String($$float | 0);
}

function getItemStyles(offset) {
  var coords = Belt_Option.map((offset == null) ? undefined : Caml_option.some(offset), (function (param) {
          return [
                  String(param.x | 0),
                  String(param.y | 0)
                ];
        }));
  if (coords !== undefined) {
    return {
            transform: "translate(" + coords[0] + "px, " + coords[1] + "px)"
          };
  } else {
    return {
            visibility: "hidden"
          };
  }
}

function DragLayerUI(Props) {
  var match = ReactDnd$1.useDragLayer(function (monitor) {
        return {
                item: monitor.getItem(),
                itemType: monitor.getItemType(),
                currentOffset: monitor.getSourceClientOffset()
              };
      });
  var itemType = Belt_Option.getWithDefault(Caml_option.nullable_to_opt(match.itemType), "");
  var isCard = itemType === "card";
  return React.createElement("div", {
              className: "absolute pointer-events-none left-0 top-0 w-full h-full"
            }, React.createElement("div", {
                  className: Utils.cx([
                        "inline-block overflow-hidden rounded-md transition-shadow",
                        isCard ? "shadow-lg" : ""
                      ]),
                  style: getItemStyles(match.currentOffset)
                }, isCard ? React.createElement(CardUI.make, {
                        card: match.item
                      }) : null));
}

var make = DragLayerUI;

export {
  DragObject ,
  DragLayerCP ,
  DndL ,
  floatToString ,
  getItemStyles ,
  make ,
  
}
/* DndL Not a pure module */
