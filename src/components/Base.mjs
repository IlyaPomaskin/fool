// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Utils from "../Utils.mjs";
import * as React from "react";
import * as Js_math from "rescript/lib/es6/js_math.js";

function Base$Heading(Props) {
  var classNameOpt = Props.className;
  var size = Props.size;
  var children = Props.children;
  var className = classNameOpt !== undefined ? classNameOpt : "";
  var sizeClassName;
  switch (size) {
    case /* H2 */0 :
        sizeClassName = "text-4xl";
        break;
    case /* H3 */1 :
        sizeClassName = "text-3xl";
        break;
    case /* H4 */2 :
        sizeClassName = "text-2xl";
        break;
    case /* H5 */3 :
        sizeClassName = "text-xl";
        break;
    
  }
  return React.createElement("h1", {
              className: Utils.cx([
                    "font-medium leading-tight",
                    sizeClassName,
                    className
                  ])
            }, children);
}

var Heading = {
  make: Base$Heading
};

function Base$Button(Props) {
  var disabledOpt = Props.disabled;
  var classNameOpt = Props.className;
  var onClickOpt = Props.onClick;
  var children = Props.children;
  var disabled = disabledOpt !== undefined ? disabledOpt : false;
  var className = classNameOpt !== undefined ? classNameOpt : "";
  var onClick = onClickOpt !== undefined ? onClickOpt : Utils.noop;
  return React.createElement("button", {
              className: Utils.cx([
                    className,
                    "inline-block px-6 py-2.5",
                    "bg-blue-600 text-white font-medium text-xs leading-tight uppercase",
                    "rounded shadow-md",
                    "transition duration-150 ease-in-out",
                    disabled ? "opacity-60" : "hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg"
                  ]),
              disabled: disabled,
              type: "button",
              onClick: onClick
            }, children);
}

var Button = {
  make: Base$Button
};

function Base$Switch(Props) {
  var disabledOpt = Props.disabled;
  var checked = Props.checked;
  var onClick = Props.onClick;
  var text = Props.text;
  var classNameOpt = Props.className;
  var disabled = disabledOpt !== undefined ? disabledOpt : false;
  var className = classNameOpt !== undefined ? classNameOpt : "";
  var uniqId = React.useMemo((function () {
          return String(Js_math.random_int(0, 10000000));
        }), []);
  return React.createElement("div", {
              className: Utils.cx([
                    "form-check form-switch",
                    className
                  ])
            }, React.createElement("input", {
                  className: Utils.cx([
                        "form-check-input appearance-none w-9 -ml-10 loat-left h-5 align-top",
                        "rounded-full f",
                        "bg-white bg-no-repeat bg-contain bg-gray-300",
                        "focus:outline-none shadow-sm",
                        disabled ? "filter-none opacity-50" : ""
                      ]),
                  id: "switch-" + uniqId,
                  role: "switch",
                  checked: checked,
                  disabled: disabled,
                  type: "checkbox",
                  onChange: onClick
                }), React.createElement("label", {
                  className: Utils.cx([
                        "ml-2 form-check-label cursor-pointer inline-block text-gray-800 select-none",
                        disabled ? "opacity-50" : ""
                      ]),
                  disabled: disabled,
                  htmlFor: "switch-" + uniqId
                }, Utils.uiStr(text)));
}

var Switch = {
  make: Base$Switch
};

function Base$Input(Props) {
  var value = Props.value;
  var disabledOpt = Props.disabled;
  var onChange = Props.onChange;
  var classNameOpt = Props.className;
  var disabled = disabledOpt !== undefined ? disabledOpt : false;
  var className = classNameOpt !== undefined ? classNameOpt : "";
  return React.createElement("input", {
              className: Utils.cx([
                    "form-control block px-3 py-1.5",
                    "text-base font-normal text-gray-700",
                    "bg-white bg-clip-padding",
                    "border border-solid border-gray-300 rounded",
                    "transition ease-in-out",
                    "focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none",
                    className
                  ]),
              disabled: disabled,
              type: "text",
              value: value,
              onChange: (function (e) {
                  return Curry._1(onChange, e.target.value);
                })
            });
}

var Input = {
  make: Base$Input
};

export {
  Heading ,
  Button ,
  Switch ,
  Input ,
  
}
/* react Not a pure module */
