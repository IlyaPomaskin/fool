// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Card from "../fool/Card.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as Utils from "../Utils.mjs";
import * as React from "react";
import * as CardUI from "./CardUI.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as ReactBeautifulDnd from "react-beautiful-dnd";

function TableUI$DndWrapper(Props) {
  var card = Props.card;
  var children = Props.children;
  return React.createElement(ReactBeautifulDnd.Droppable, {
              droppableId: Card.cardToString(card),
              direction: "horizontal",
              children: (function (provided, snapshot) {
                  return React.createElement("div", {
                              ref: provided.innerRef,
                              className: Utils.cx([
                                    "relative top-0 left-0 w-12 h-16 flex",
                                    snapshot.isDraggingOver ? "bg-gradient-to-tl from-purple-200 to-pink-200 opacity-70" : ""
                                  ])
                            }, children, provided.placeholder);
                })
            });
}

var DndWrapper = {
  make: TableUI$DndWrapper
};

function TableUI(Props) {
  var classNameOpt = Props.className;
  var isDropDisabledOpt = Props.isDropDisabled;
  var isDefender = Props.isDefender;
  var table = Props.table;
  var className = classNameOpt !== undefined ? classNameOpt : "";
  var isDropDisabled = isDropDisabledOpt !== undefined ? isDropDisabledOpt : (function (param) {
        return false;
      });
  return React.createElement("div", {
              className: Utils.cx([
                    "flex gap-1 flex-row",
                    className
                  ])
            }, Utils.uiReverseList(table, (function (param) {
                    var by = param[1];
                    var to = param[0];
                    var key = Card.cardToString(to) + Belt_Option.getWithDefault(Belt_Option.map(by, Card.cardToString), "");
                    if (by !== undefined) {
                      return React.createElement("div", {
                                  key: key,
                                  className: "flex flex-col gap-1 relative"
                                }, React.createElement(CardUI.make, {
                                      card: to,
                                      className: "-rotate-12 -translate-x-1.5 -Qtranslate-y-1",
                                      disabled: true
                                    }), React.createElement("div", {
                                      className: "absolute left-1 top-1 rotate-12 translate-x-1.5 Qtranslate-y-1"
                                    }, React.createElement(CardUI.make, {
                                          card: by,
                                          disabled: true
                                        })));
                    } else if (isDefender) {
                      return React.createElement("div", {
                                  key: key,
                                  className: "flex flex-col gap-1"
                                }, React.createElement(CardUI.make, {
                                      card: to
                                    }), React.createElement(ReactBeautifulDnd.Droppable, {
                                      droppableId: Card.cardToString(to),
                                      isDropDisabled: Curry._1(isDropDisabled, to),
                                      direction: "horizontal",
                                      children: (function (provided, snapshot) {
                                          return React.createElement("div", {
                                                      ref: provided.innerRef
                                                    }, React.createElement(CardUI.Base.make, {
                                                          className: Utils.cx([snapshot.isDraggingOver ? "bg-pink-200" : ""]),
                                                          children: provided.placeholder
                                                        }), React.createElement("div", undefined));
                                        })
                                    }));
                    } else {
                      return React.createElement("div", {
                                  key: key,
                                  className: "flex flex-col gap-1"
                                }, React.createElement(CardUI.make, {
                                      card: to,
                                      disabled: true
                                    }), React.createElement(CardUI.Base.make, {}));
                    }
                  })));
}

var make = TableUI;

export {
  DndWrapper ,
  make ,
  
}
/* react Not a pure module */
