// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Card from "../fool/Card.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as Utils from "../Utils.mjs";
import * as React from "react";
import * as CardUI from "./CardUI.mjs";
import * as CardDnd from "./CardDnd.mjs";

function DeckUI$DndWrapper(Props) {
  var card = Props.card;
  var index = Props.index;
  var children = Props.children;
  return React.createElement(CardDnd.Cards.DroppableContainer.make, {
              id: /* ToCard */{
                _0: card
              },
              axis: /* X */0,
              accept: (function (param) {
                  return false;
                }),
              children: React.createElement(CardDnd.Cards.DraggableItem.make, {
                    id: card,
                    containerId: /* ToCard */{
                      _0: card
                    },
                    index: index,
                    className: (function (dragging) {
                        return Utils.cx([
                                    "",
                                    ""
                                  ]);
                      }),
                    children: {
                      NAME: "Children",
                      VAL: children
                    }
                  })
            });
}

var DndWrapper = {
  make: DeckUI$DndWrapper
};

function DeckUI(Props) {
  var deck = Props.deck;
  var classNameOpt = Props.className;
  var disabledOpt = Props.disabled;
  var isDraggableOpt = Props.isDraggable;
  var isCardDisabledOpt = Props.isCardDisabled;
  var className = classNameOpt !== undefined ? classNameOpt : "";
  var disabled = disabledOpt !== undefined ? disabledOpt : false;
  var isDraggable = isDraggableOpt !== undefined ? isDraggableOpt : false;
  var isCardDisabled = isCardDisabledOpt !== undefined ? isCardDisabledOpt : (function (param) {
        return false;
      });
  if (deck) {
    return React.createElement("div", {
                className: Utils.cx([
                      className,
                      "leading flex flex-row gap-1"
                    ])
              }, Utils.uiListWithIndex(deck, (function (index, card) {
                      var key = Card.cardToString(card) + String(index);
                      var disabled$1 = disabled || Curry._1(isCardDisabled, card);
                      if (isDraggable) {
                        return React.createElement(DeckUI$DndWrapper, {
                                    card: card,
                                    index: index,
                                    children: React.createElement(CardUI.make, {
                                          card: card,
                                          disabled: disabled$1
                                        }),
                                    key: key
                                  });
                      } else {
                        return React.createElement(CardUI.make, {
                                    card: card,
                                    disabled: disabled$1,
                                    key: key
                                  });
                      }
                    })));
  } else {
    return React.createElement("div", {
                className: className
              }, Utils.uiStr("No cards in deck"));
  }
}

var make = DeckUI;

export {
  DndWrapper ,
  make ,
  
}
/* react Not a pure module */
