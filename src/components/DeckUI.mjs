// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Card from "../fool/Card.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as Utils from "../Utils.mjs";
import * as React from "react";
import * as CardUI from "./CardUI.mjs";
import * as CardDnd from "./CardDnd.mjs";

function DeckUI(Props) {
  var deck = Props.deck;
  var classNameOpt = Props.className;
  var disabledOpt = Props.disabled;
  var isDraggableOpt = Props.isDraggable;
  var isCardSelectedOpt = Props.isCardSelected;
  var isCardDisabledOpt = Props.isCardDisabled;
  var className = classNameOpt !== undefined ? classNameOpt : "";
  var disabled = disabledOpt !== undefined ? disabledOpt : false;
  var isDraggable = isDraggableOpt !== undefined ? isDraggableOpt : false;
  var isCardSelected = isCardSelectedOpt !== undefined ? isCardSelectedOpt : (function (param) {
        return false;
      });
  var isCardDisabled = isCardDisabledOpt !== undefined ? isCardDisabledOpt : (function (param) {
        return false;
      });
  if (deck) {
    return React.createElement("div", {
                className: Utils.cx([
                      className,
                      "leading flex flex-row gap-1"
                    ])
              }, Utils.uiListWithIndex(deck, (function (index, card) {
                      if (isDraggable) {
                        return React.createElement(CardDnd.Cards.DroppableContainer.make, {
                                    id: card,
                                    axis: /* X */0,
                                    accept: (function (param) {
                                        return false;
                                      }),
                                    children: React.createElement(CardDnd.Cards.DraggableItem.make, {
                                          id: card,
                                          containerId: card,
                                          index: index,
                                          className: (function (dragging) {
                                              return Utils.cx([
                                                          "",
                                                          ""
                                                        ]);
                                            }),
                                          children: {
                                            NAME: "Children",
                                            VAL: React.createElement(CardUI.make, {
                                                  card: card,
                                                  disabled: disabled || Curry._1(isCardDisabled, card),
                                                  selected: Curry._1(isCardSelected, card)
                                                })
                                          }
                                        }),
                                    key: Card.cardToString(card) + String(index)
                                  });
                      } else {
                        return React.createElement(CardUI.make, {
                                    card: card,
                                    className: "inline-block mx-1",
                                    disabled: disabled || Curry._1(isCardDisabled, card),
                                    selected: Curry._1(isCardSelected, card),
                                    key: Card.cardToString(card) + String(index)
                                  });
                      }
                    })));
  } else {
    return React.createElement("div", {
                className: className
              }, Utils.uiStr("No cards in deck"));
  }
}

var make = DeckUI;

export {
  make ,
  
}
/* react Not a pure module */
