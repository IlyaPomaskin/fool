// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Card from "../fool/Card.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as Utils from "../Utils.mjs";
import * as React from "react";
import * as CardUI from "./CardUI.mjs";
import * as ReactBeautifulDnd from "react-beautiful-dnd";

var spread3 = ((x1,x2,x3) => ({ ...x1, ...x2, ...x3 }));

function DeckUI$DndWrapper(Props) {
  var card = Props.card;
  var index = Props.index;
  var children = Props.children;
  var id = Card.cardToString(card);
  return React.createElement(ReactBeautifulDnd.Droppable, {
              droppableId: id,
              isDropDisabled: true,
              children: (function (droppableProvided, param) {
                  return React.createElement("div", {
                              key: id,
                              ref: droppableProvided.innerRef
                            }, React.createElement(ReactBeautifulDnd.Draggable, {
                                  draggableId: id,
                                  index: index,
                                  children: (function (draggableProvided, param, param$1) {
                                      return React.cloneElement(React.createElement("div", undefined, children), spread3(draggableProvided.draggableProps, draggableProvided.dragHandleProps, {
                                                      key: id,
                                                      ref: draggableProvided.innerRef,
                                                      style: draggableProvided.draggableProps.style
                                                    }));
                                    }),
                                  key: id
                                }), droppableProvided.placeholder);
                })
            });
}

var DndWrapper = {
  make: DeckUI$DndWrapper
};

function DeckUI(Props) {
  var deck = Props.deck;
  var classNameOpt = Props.className;
  var disabledOpt = Props.disabled;
  var isDraggableOpt = Props.isDraggable;
  var isCardDisabledOpt = Props.isCardDisabled;
  var className = classNameOpt !== undefined ? classNameOpt : "";
  var disabled = disabledOpt !== undefined ? disabledOpt : false;
  var isDraggable = isDraggableOpt !== undefined ? isDraggableOpt : false;
  var isCardDisabled = isCardDisabledOpt !== undefined ? isCardDisabledOpt : (function (param) {
        return false;
      });
  if (deck) {
    return React.createElement("div", {
                className: Utils.cx([
                      className,
                      "leading flex flex-row gap-1"
                    ])
              }, Utils.uiListWithIndex(deck, (function (index, card) {
                      var key = Card.cardToString(card) + String(index);
                      var disabled$1 = disabled || Curry._1(isCardDisabled, card);
                      if (isDraggable) {
                        return React.createElement(DeckUI$DndWrapper, {
                                    card: card,
                                    index: index,
                                    children: React.createElement(CardUI.make, {
                                          card: card,
                                          disabled: disabled$1
                                        }),
                                    key: key
                                  });
                      } else {
                        return React.createElement(CardUI.make, {
                                    card: card,
                                    disabled: disabled$1,
                                    key: key
                                  });
                      }
                    })));
  } else {
    return React.createElement("div", {
                className: className
              }, Utils.uiStr("No cards in deck"));
  }
}

var make = DeckUI;

export {
  spread3 ,
  DndWrapper ,
  make ,
  
}
/* react Not a pure module */
