// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Card from "../fool/Card.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as UiUtils from "../UiUtils.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

function suitToColor(suit) {
  switch (suit) {
    case /* Hearts */1 :
    case /* Diamonds */2 :
        return "text-red-900 dark:text-cyan-300";
    case /* Spades */0 :
    case /* Clubs */3 :
        return "text-slate-500";
    
  }
}

function CardUI$CardUILocal(Props) {
  var classNameOpt = Props.className;
  var disabledOpt = Props.disabled;
  var card = Props.card;
  var onClickOpt = Props.onClick;
  var className = classNameOpt !== undefined ? classNameOpt : "";
  var disabled = disabledOpt !== undefined ? disabledOpt : false;
  var onClick = onClickOpt !== undefined ? onClickOpt : UiUtils.noop;
  return React.createElement("div", {
              className: UiUtils.cx([
                    "relative w-12 h-16",
                    "border rounded-md border-solid border-slate-500",
                    "cursor-pointer select-none",
                    disabled ? "text-slate-300 border-slate-400" : suitToColor(card[0]),
                    className
                  ]),
              onClick: disabled ? UiUtils.noop : (function (param) {
                    return Curry._1(onClick, card);
                  })
            }, React.createElement("div", {
                  className: "absolute text-[18px] leading-[18px] inset-1"
                }, UiUtils.uiStr(Card.suitToString(card[0]))), React.createElement("div", {
                  className: "absolute top-1/2 left-1/2 font-bold text-[18px] leading-[18px] translate-y-[-50%] translate-x-[-50%]"
                }, UiUtils.uiStr(Card.rankToString(card[1]))));
}

var CardUILocal = {
  make: CardUI$CardUILocal
};

function make(classNameOpt, card, onClick, param) {
  var className = classNameOpt !== undefined ? classNameOpt : "";
  return React.createElement(CardUI$CardUILocal, {
              className: className,
              card: card,
              onClick: Belt_Option.getWithDefault(onClick, UiUtils.noop)
            });
}

function CardUI$trump(Props) {
  var suit = Props.suit;
  var classNameOpt = Props.className;
  var className = classNameOpt !== undefined ? classNameOpt : "";
  return React.createElement("div", {
              className: UiUtils.cx([
                    className,
                    suitToColor(suit)
                  ])
            }, UiUtils.uiStr(Card.suitToString(suit)));
}

function CardUI$deck(Props) {
  var deck = Props.deck;
  var classNameOpt = Props.className;
  var disabledOpt = Props.disabled;
  var onCardClick = Props.onCardClick;
  var className = classNameOpt !== undefined ? classNameOpt : "";
  var disabled = disabledOpt !== undefined ? disabledOpt : false;
  if (deck) {
    return React.createElement("div", {
                className: UiUtils.cx([
                      className,
                      "leading"
                    ])
              }, UiUtils.uiList(deck, (function (card) {
                      return React.createElement(CardUI$CardUILocal, {
                                  className: "inline-block mx-1",
                                  disabled: disabled,
                                  card: card,
                                  onClick: Belt_Option.getWithDefault(onCardClick, UiUtils.noop),
                                  key: Card.cardToString(card)
                                });
                    })));
  } else {
    return React.createElement("div", {
                className: className
              }, UiUtils.uiStr("No cards in deck"));
  }
}

function CardUI$table(Props) {
  var table = Props.table;
  return React.createElement("div", undefined, table ? UiUtils.uiList(table, (function (param) {
                      var by = param[1];
                      var to = param[0];
                      return React.createElement("div", {
                                  key: Card.cardToString(to) + Belt_Option.getWithDefault(Belt_Option.map(by, Card.cardToString), "a"),
                                  className: "inline-block mx-1"
                                }, React.createElement(CardUI$CardUILocal, {
                                      card: to
                                    }), by !== undefined ? React.createElement(CardUI$CardUILocal, {
                                        card: by
                                      }) : React.createElement("div", undefined, UiUtils.uiStr("None")));
                    })) : UiUtils.uiStr("Table empty"));
}

var trump = CardUI$trump;

var deck = CardUI$deck;

var table = CardUI$table;

export {
  suitToColor ,
  CardUILocal ,
  make ,
  trump ,
  deck ,
  table ,
  
}
/* react Not a pure module */
