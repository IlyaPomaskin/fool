// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as CardUI from "./CardUI.mjs";
import * as UiUtils from "../UiUtils.mjs";
import * as PlayerUI from "./PlayerUI.mjs";
import * as Belt_List from "rescript/lib/es6/belt_List.js";
import * as GameUtils from "../fool/GameUtils.mjs";
import * as Pervasives from "rescript/lib/es6/pervasives.js";

function GameUI$InLobbyUI(Props) {
  var game = Props.game;
  return React.createElement("div", undefined, UiUtils.uiStr("inLobby"), React.createElement("br", undefined), React.createElement("br", undefined), UiUtils.uiStr("players:"), React.createElement("br", undefined), React.createElement("div", undefined, UiUtils.uiList(game.players, (function (p) {
                        return React.createElement(PlayerUI.make, {
                                    player: p,
                                    key: p.id
                                  });
                      }))), React.createElement("br", undefined), UiUtils.uiStr("ready:"), React.createElement("br", undefined), React.createElement("div", undefined, UiUtils.uiList(game.ready, (function (p) {
                        return React.createElement(PlayerUI.make, {
                                    player: p,
                                    key: p.id
                                  });
                      }))));
}

var InLobbyUI = {
  make: GameUI$InLobbyUI
};

function GameUI$Button(Props) {
  var disabledOpt = Props.disabled;
  var classNameOpt = Props.className;
  var onClickOpt = Props.onClick;
  var children = Props.children;
  var disabled = disabledOpt !== undefined ? disabledOpt : false;
  var className = classNameOpt !== undefined ? classNameOpt : "";
  var onClick = onClickOpt !== undefined ? onClickOpt : UiUtils.noop;
  return React.createElement("button", {
              className: UiUtils.cx([
                    className,
                    "p-1 border rounded-md border-solid border-slate-500",
                    disabled ? "border-slate-400 text-slate-400 cursor-not-allowed" : ""
                  ]),
              disabled: disabled,
              onClick: onClick
            }, children);
}

var Button = {
  make: GameUI$Button
};

function GameUI$ClientUI(Props) {
  var classNameOpt = Props.className;
  var player = Props.player;
  var game = Props.game;
  var onMove = Props.onMove;
  var className = classNameOpt !== undefined ? classNameOpt : "";
  var handleMove = function (card) {
    return Curry._1(onMove, {
                TAG: /* Move */3,
                _0: player,
                _1: card
              });
  };
  return React.createElement("div", {
              className: UiUtils.cx([
                    className,
                    "p-1 border rounded-md border-solid border-slate-500"
                  ])
            }, React.createElement("div", {
                  className: "mb-1"
                }, UiUtils.uiStr("Player: "), React.createElement(PlayerUI.Short.make, {
                      className: "inline-block",
                      player: player
                    })), GameUtils.isPlayerDone(game, player) ? UiUtils.uiStr("Done!") : React.createElement(CardUI.deck, {
                    deck: player.cards,
                    className: "mt-1",
                    disabled: !GameUtils.isPlayerCanMove(game, player),
                    onCardClick: handleMove
                  }), React.createElement(GameUI$Button, {
                  disabled: !GameUtils.isCanPass(game, player),
                  className: "mr-1",
                  onClick: (function (param) {
                      return Curry._1(onMove, {
                                  TAG: /* Pass */2,
                                  _0: player
                                });
                    }),
                  children: UiUtils.uiStr("pass " + Pervasives.string_of_bool(GameUtils.isPassed(game, player)))
                }), React.createElement(GameUI$Button, {
                  disabled: !GameUtils.isCanTake(game, player),
                  onClick: (function (param) {
                      return Curry._1(onMove, {
                                  TAG: /* Take */0,
                                  _0: player
                                });
                    }),
                  children: UiUtils.uiStr("take")
                }));
}

var ClientUI = {
  make: GameUI$ClientUI
};

function GameUI$InProgressUI(Props) {
  var game = Props.game;
  var onMove = Props.onMove;
  return React.createElement("div", undefined, React.createElement("div", undefined, UiUtils.uiStr("Attacker: "), React.createElement(PlayerUI.Short.make, {
                      className: "inline-block",
                      player: game.attacker
                    })), React.createElement("div", undefined, UiUtils.uiStr("Defender: "), React.createElement(PlayerUI.Short.make, {
                      className: "inline-block",
                      player: game.defender
                    })), React.createElement("div", undefined, UiUtils.uiList(game.players, (function (p) {
                        return React.createElement("div", {
                                    key: p.id
                                  }, React.createElement(PlayerUI.Short.make, {
                                        className: "inline-block",
                                        player: p
                                      }), UiUtils.uiStr(" Cards: " + String(Belt_List.length(p.cards))), UiUtils.uiStr(GameUtils.isPassed(game, p) ? " pass" : ""), UiUtils.uiStr(GameUtils.isAttacker(game, p) ? " ATT" : ""), UiUtils.uiStr(GameUtils.isDefender(game, p) ? " DEF" : ""));
                      }))), React.createElement("div", undefined, UiUtils.uiStr("Trump: "), React.createElement(CardUI.trump, {
                      suit: game.trump,
                      className: "inline-block"
                    })), React.createElement("div", undefined, UiUtils.uiStr("Deck: " + String(Belt_List.length(game.deck)))), React.createElement("div", {
                  className: "my-2"
                }, UiUtils.uiStr("Table:"), React.createElement(CardUI.table, {
                      table: game.table
                    })), React.createElement("div", {
                  className: "flex flex-wrap"
                }, UiUtils.uiList(game.players, (function (p) {
                        return React.createElement(GameUI$ClientUI, {
                                    className: "m-1 flex-initial w-96",
                                    player: p,
                                    game: game,
                                    onMove: onMove,
                                    key: p.id
                                  });
                      }))));
}

var InProgressUI = {
  make: GameUI$InProgressUI
};

function GameUI(Props) {
  var game = Props.game;
  if (game.TAG === /* InLobby */0) {
    return React.createElement(GameUI$InLobbyUI, {
                game: game._0
              });
  } else {
    return React.createElement("div", undefined);
  }
}

var make = GameUI;

export {
  InLobbyUI ,
  Button ,
  ClientUI ,
  InProgressUI ,
  make ,
  
}
/* react Not a pure module */
