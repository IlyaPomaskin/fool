// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Deck from "./fool/Deck.mjs";
import * as Game from "./fool/Game.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as Utils from "./Utils.mjs";
import * as React from "react";
import * as GameUI from "./components/GameUI.mjs";
import * as Player from "./fool/Player.mjs";
import * as ClientUI from "./components/ClientUI.mjs";
import * as Belt_List from "rescript/lib/es6/belt_List.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Belt_Result from "rescript/lib/es6/belt_Result.js";

var author = Player.make("author");

var players_1 = {
  hd: Player.make("bbb"),
  tl: {
    hd: Player.make("ccc"),
    tl: /* [] */0
  }
};

var players = {
  hd: author,
  tl: players_1
};

function make(param) {
  return Belt_Result.getExn(Game.startGame({
                  gameId: "123",
                  players: players,
                  ready: players
                }));
}

function dispatch(action, game, player) {
  var tmp;
  tmp = typeof action === "number" ? (
      action === /* Take */0 ? Game.take(game, player) : Game.pass(game, player)
    ) : (
      action.TAG === /* Beat */0 ? Game.beat(game, action._0, action._1, player) : Game.move(game, player, action._0)
    );
  return Belt_Result.map(tmp, (function (param) {
                return {
                        attacker: Player.mask(player, param.attacker),
                        defender: Player.mask(player, param.defender),
                        players: Belt_List.map(param.players, (function (param) {
                                return Player.mask(player, param);
                              })),
                        trump: param.trump,
                        deck: Deck.mask(param.deck),
                        table: param.table,
                        pass: Belt_List.map(param.pass, (function (param) {
                                return Player.mask(player, param);
                              }))
                      };
              }));
}

var game = make(undefined);

function $$default(param) {
  var player = param.player;
  var match = React.useState(function () {
        return game;
      });
  var nextGame = match[1];
  var game$1 = match[0];
  var match$1 = React.useState(function () {
        
      });
  var setError = match$1[1];
  var handleMove = function (move) {
    var game$2 = dispatch(move, game$1, player);
    if (game$2.TAG === /* Ok */0) {
      var game$3 = game$2._0;
      Curry._1(nextGame, (function (param) {
              return game$3;
            }));
      return Curry._1(setError, (function (param) {
                    
                  }));
    }
    var err = game$2._0;
    return Curry._1(setError, (function (param) {
                  return err;
                }));
  };
  return React.createElement("div", undefined, React.createElement(GameUI.InProgressUI.make, {
                  game: game$1
                }), React.createElement("div", {
                  className: "flex flex-wrap"
                }, Utils.uiList(game$1.players, (function (player) {
                        return React.createElement(ClientUI.make, {
                                    className: "m-1 flex-initial w-96",
                                    player: player,
                                    game: game$1,
                                    onMove: handleMove,
                                    key: player.id
                                  });
                      }))), React.createElement("div", undefined, Belt_Option.getWithDefault(Belt_Option.map(match$1[0], (function (err) {
                            return Utils.uiStr("Error: " + err);
                          })), Utils.uiStr("No errors"))));
}

function getServerSideProps(_ctx) {
  return Promise.resolve({
              props: {
                inProgress: Belt_Result.getExn(Game.startGame({
                          players: players,
                          ready: players
                        })),
                player: author
              }
            });
}

export {
  $$default ,
  $$default as default,
  getServerSideProps ,
  
}
/* author Not a pure module */
