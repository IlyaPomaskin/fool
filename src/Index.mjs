// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Game from "./fool/Game.mjs";
import * as Utils from "./Utils.mjs";
import * as React from "react";
import * as GameUI from "./components/GameUI.mjs";
import * as Server from "./Server.mjs";
import * as ClientUI from "./components/ClientUI.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Belt_Result from "rescript/lib/es6/belt_Result.js";

function Index$Client(Props) {
  var game = Props.game;
  var match = React.useState(function () {
        return game;
      });
  var game$1 = match[0];
  var match$1 = React.useState(function () {
        
      });
  var handleMove = function (move) {
    
  };
  console.log("render", Game.toObject(game$1));
  return React.createElement("div", undefined, React.createElement(GameUI.InProgressUI.make, {
                  game: game$1
                }), React.createElement("div", {
                  className: "flex flex-wrap"
                }, Utils.uiList(game$1.players, (function (player) {
                        return React.createElement(ClientUI.make, {
                                    className: "m-1 flex-initial w-96",
                                    player: player,
                                    game: game$1,
                                    onMove: handleMove,
                                    key: player.id
                                  });
                      }))), React.createElement("div", undefined, Belt_Option.getWithDefault(Belt_Option.map(match$1[0], (function (err) {
                            return Utils.uiStr("Error: " + err);
                          })), Utils.uiStr("No errors"))));
}

function $$default(param) {
  var game = param.game;
  if (game.TAG !== /* Ok */0) {
    return Utils.uiStr(game._0);
  }
  var game$1 = game._0;
  if (game$1.TAG === /* InLobby */0) {
    return Utils.uiStr("lobby?");
  } else {
    return React.createElement(Index$Client, {
                game: game$1._0,
                player: param.player
              });
  }
}

function getServerSideProps(_ctx) {
  return Promise.resolve({
              props: {
                game: Belt_Result.map(Server.getGame("GAME_ID"), (function (game) {
                        if (game.TAG === /* InLobby */0) {
                          return {
                                  TAG: /* InLobby */0,
                                  _0: game._0
                                };
                        } else {
                          return {
                                  TAG: /* InProgress */1,
                                  _0: Game.maskForPlayer(Server.author, game._0)
                                };
                        }
                      })),
                player: Server.author
              }
            });
}

export {
  $$default ,
  $$default as default,
  getServerSideProps ,
  
}
/* react Not a pure module */
