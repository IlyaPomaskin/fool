// Generated by ReScript, PLEASE EDIT WITH CARE

import * as RDnd from "./bindings/RDnd.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as Utils from "./Utils.mjs";
import * as React from "react";
import * as ReactDnd from "react-dnd";
import * as ReactDndHtml5Backend from "react-dnd-html5-backend";

var DragObject = {};

var DropResult = {};

var CollectedProps = {};

RDnd.MakeDnd(DragObject, DropResult, CollectedProps);

function Index$Item(Props) {
  var box = Props.box;
  var match = ReactDnd.useDrag({
        type: "box",
        item: box,
        collect: (function (monitor) {
            return {
                    isDragging: monitor.isDragging()
                  };
          })
      }, [
        box.left,
        box.top
      ]);
  var ref = match[1];
  if (match[0].isDragging) {
    return React.createElement("div", {
                ref: ref
              });
  } else {
    return React.createElement("div", {
                ref: ref,
                style: {
                  backgroundColor: "white",
                  border: "1px dashed gray",
                  cursor: "move",
                  left: String(box.left) + "px",
                  padding: "0.5rem 1rem",
                  position: "absolute",
                  top: String(box.top) + "px"
                }
              }, Utils.uiStr(box.title));
  }
}

function Index$Container(Props) {
  var match = React.useState(function () {
        return {
                a: {
                  id: "a",
                  top: 10,
                  left: 20,
                  title: "Box 1"
                },
                b: {
                  id: "b",
                  top: 40,
                  left: 40,
                  title: "Box 2"
                }
              };
      });
  var setBoxes = match[1];
  var boxes = match[0];
  var moveBox = React.useCallback((function (id) {
          return function (left, top) {
            return Curry._1(setBoxes, (function (boxes) {
                          switch (id) {
                            case "a" :
                                return {
                                        a: {
                                          id: "a",
                                          top: top,
                                          left: left,
                                          title: "Box 1"
                                        },
                                        b: boxes.b
                                      };
                            case "b" :
                                return {
                                        a: boxes.a,
                                        b: {
                                          id: "b",
                                          top: top,
                                          left: left,
                                          title: "Box 2"
                                        }
                                      };
                            default:
                              return boxes;
                          }
                        }));
          };
        }), [setBoxes]);
  var match$1 = ReactDnd.useDrop({
        accept: "box",
        drop: (function (item, monitor) {
            var delta = monitor.getDifferenceFromInitialOffset();
            if (!(delta == null)) {
              var left = Math.round(item.left + delta.x);
              var top = Math.floor(item.top + delta.y);
              Curry._3(moveBox, item.id, left, top);
            }
            
          })
      }, []);
  return React.createElement("div", {
              ref: match$1[1],
              className: "w-64 h-64 bg-slate-300 relative"
            }, React.createElement(Index$Item, {
                  box: boxes.a
                }), React.createElement(Index$Item, {
                  box: boxes.b
                }));
}

function $$default(param) {
  return React.createElement("div", {
              className: "flex flex-row flex-wrap justify-items-center w-full container px-12 py-6 gap-12"
            }, React.createElement(ReactDnd.DndProvider, {
                  backend: ReactDndHtml5Backend.HTML5Backend,
                  children: React.createElement(Index$Container, {})
                }));
}

export {
  $$default ,
  $$default as default,
  
}
/*  Not a pure module */
