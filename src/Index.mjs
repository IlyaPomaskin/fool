// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Game from "./fool/Game.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as GameUI from "./components/GameUI.mjs";
import * as Player from "./fool/Player.mjs";
import * as UiUtils from "./UiUtils.mjs";
import * as Belt_Result from "rescript/lib/es6/belt_Result.js";

var players_0 = Player.make("aaa");

var players_1 = {
  hd: Player.make("bbb"),
  tl: {
    hd: Player.make("ccc"),
    tl: /* [] */0
  }
};

var players = {
  hd: players_0,
  tl: players_1
};

function $$default(p) {
  var match = React.useState(function () {
        return p.inProgress;
      });
  var nextGame = match[1];
  var game = match[0];
  var match$1 = React.useState(function () {
        
      });
  var setError = match$1[1];
  var error = match$1[0];
  var handleGameChange = function (a) {
    if (a.TAG === /* Ok */0) {
      var nextG = a._0;
      Curry._1(nextGame, (function (param) {
              return nextG;
            }));
      return Curry._1(setError, (function (param) {
                    
                  }));
    }
    var err = a._0;
    return Curry._1(setError, (function (param) {
                  return err;
                }));
  };
  var handleMove = function (m) {
    if (game.TAG === /* InLobby */0) {
      return ;
    }
    var g = game._0;
    switch (m.TAG | 0) {
      case /* Take */0 :
          return handleGameChange(Game.take(g, m._0));
      case /* Beat */1 :
          return handleGameChange(Game.beat(g, m._1, m._2, m._0));
      case /* Pass */2 :
          return handleGameChange(Game.pass(g, m._0));
      case /* Move */3 :
          return handleGameChange(Game.move(g, m._0, m._1));
      
    }
  };
  if (game.TAG !== /* InLobby */0) {
    console.log(game._0);
  }
  if (game.TAG === /* InLobby */0) {
    return React.createElement("div", undefined, UiUtils.uiStr("In lobby"));
  } else {
    return React.createElement("div", undefined, React.createElement(GameUI.InProgressUI.make, {
                    game: game._0,
                    onMove: handleMove
                  }), React.createElement("div", undefined, error !== undefined ? UiUtils.uiStr("Error: " + error) : UiUtils.uiStr("No errors")));
  }
}

function getServerSideProps(_ctx) {
  return Promise.resolve({
              props: {
                inProgress: Belt_Result.getExn(Game.startGame({
                          players: players,
                          ready: players
                        })),
                inLobby: Game.makeGameInLobby("owner")
              }
            });
}

export {
  $$default ,
  $$default as default,
  getServerSideProps ,
  
}
/* players Not a pure module */
