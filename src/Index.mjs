// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Base from "./components/Base.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as UseWs from "./hooks/UseWs.mjs";
import * as Utils from "./Utils.mjs";
import * as React from "react";
import * as GameUI from "./components/GameUI.mjs";
import * as LobbyUI from "./components/LobbyUI.mjs";
import * as ClientUI from "./components/ClientUI.mjs";
import * as PlayerUI from "./components/PlayerUI.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

function Index$Client(Props) {
  var playerId = Props.playerId;
  var match = UseWs.hook(playerId);
  var sendMessage = match.sendMessage;
  var error = match.error;
  var inProgress = match.inProgress;
  var inLobby = match.inLobby;
  var player = match.player;
  console.log({
        player: player,
        inLobby: inLobby,
        inProgress: inProgress
      });
  return React.createElement("div", undefined, React.createElement("div", undefined, player !== undefined ? React.createElement(PlayerUI.Short.make, {
                        player: player
                      }) : React.createElement("div", undefined)), React.createElement("div", undefined, error !== undefined ? React.createElement("div", undefined, Utils.uiStr("server error: " + error)) : React.createElement("div", undefined, Utils.uiStr("no server error"))), React.createElement(LobbyUI.make, {
                  game: inLobby,
                  onLobbyMessage: sendMessage,
                  playerId: playerId
                }), inProgress !== undefined ? React.createElement("div", undefined, React.createElement(GameUI.InProgressUI.make, {
                        game: inProgress
                      }), React.createElement("div", {
                        className: "flex flex-wrap"
                      }, Utils.uiList(inProgress.players, (function (player) {
                              return React.createElement(ClientUI.make, {
                                          className: "m-1 flex-initial w-96",
                                          player: player,
                                          isOwner: player.id === playerId,
                                          game: inProgress,
                                          onMove: (function (move) {
                                              return Curry._1(sendMessage, {
                                                          TAG: /* Progress */2,
                                                          _0: move,
                                                          _1: playerId,
                                                          _2: inProgress.gameId
                                                        });
                                            }),
                                          key: player.id
                                        });
                            }))), React.createElement("div", undefined, Utils.uiStr(Belt_Option.getWithDefault(Belt_Option.map(error, (function (err) {
                                      return "Error: " + err;
                                    })), "No errors")))) : React.createElement("div", undefined));
}

function $$default(param) {
  var match = React.useState(function () {
        return "";
      });
  var setFirst = match[1];
  var first = match[0];
  var match$1 = React.useState(function () {
        
      });
  var setFirstPlayerId = match$1[1];
  var firstPlayerId = match$1[0];
  var match$2 = React.useState(function () {
        return "";
      });
  var setSecond = match$2[1];
  var second = match$2[0];
  var match$3 = React.useState(function () {
        
      });
  var setSecondPlayerId = match$3[1];
  var secondPlayerId = match$3[0];
  return React.createElement("div", undefined, React.createElement("div", {
                  className: "my-2 w-1/2 inline-block border rounded-md border-solid border-slate-500"
                }, firstPlayerId !== undefined ? React.createElement(Index$Client, {
                        playerId: firstPlayerId
                      }) : React.createElement("div", undefined, React.createElement("input", {
                            value: first,
                            onChange: (function (e) {
                                return Curry._1(setFirst, (function (param) {
                                              return e.target.value;
                                            }));
                              })
                          }), React.createElement(Base.Button.make, {
                            onClick: (function (param) {
                                return Curry._1(setFirstPlayerId, (function (param) {
                                              return first;
                                            }));
                              }),
                            children: Utils.uiStr("connect")
                          }))), React.createElement("div", {
                  className: "my-2 w-1/2 inline-block border rounded-md border-solid border-slate-500"
                }, secondPlayerId !== undefined ? React.createElement(Index$Client, {
                        playerId: secondPlayerId
                      }) : React.createElement("div", undefined, React.createElement("input", {
                            value: second,
                            onChange: (function (e) {
                                return Curry._1(setSecond, (function (param) {
                                              return e.target.value;
                                            }));
                              })
                          }), React.createElement(Base.Button.make, {
                            onClick: (function (param) {
                                return Curry._1(setSecondPlayerId, (function (param) {
                                              return second;
                                            }));
                              }),
                            children: Utils.uiStr("connect")
                          }))));
}

export {
  $$default ,
  $$default as default,
  
}
/* Base Not a pure module */
