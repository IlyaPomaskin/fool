// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Game from "./fool/Game.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as Utils from "./Utils.mjs";
import * as React from "react";
import * as GameUI from "./components/GameUI.mjs";
import * as Server from "./Server.mjs";
import * as Socket from "./Socket.mjs";
import * as ClientUI from "./components/ClientUI.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Belt_Result from "rescript/lib/es6/belt_Result.js";

function Index$Client(Props) {
  var game = Props.game;
  var player = Props.player;
  var onAction = Props.onAction;
  var match = React.useState(function () {
        
      });
  var setError = match[1];
  var handleMove = function (move) {
    var nextGame = Game.dispatch(game, player, move);
    if (nextGame.TAG === /* Ok */0) {
      Curry._1(onAction, move);
      return Curry._1(setError, (function (param) {
                    
                  }));
    }
    var err = nextGame._0;
    return Curry._1(setError, (function (param) {
                  return err;
                }));
  };
  return React.createElement("div", undefined, React.createElement(GameUI.InProgressUI.make, {
                  game: game
                }), React.createElement("div", {
                  className: "flex flex-wrap"
                }, Utils.uiList(game.players, (function (player) {
                        return React.createElement(ClientUI.make, {
                                    className: "m-1 flex-initial w-96",
                                    player: player,
                                    game: game,
                                    onMove: handleMove,
                                    key: player.id
                                  });
                      }))), React.createElement("div", undefined, Utils.uiStr(Belt_Option.getWithDefault(Belt_Option.map(match[0], (function (err) {
                                return "Error: " + err;
                              })), "No errors"))));
}

function $$default(param) {
  var clientGame = param.clientGame;
  var authorGame = param.authorGame;
  var handleAction = function (game, player, action) {
    Socket.SClient.send(game.gameId, player.id, action);
    
  };
  var tmp;
  if (authorGame.TAG === /* Ok */0) {
    var game = authorGame._0;
    tmp = React.createElement(Index$Client, {
          game: game,
          player: Server.author,
          onAction: (function (param) {
              return handleAction(game, Server.author, param);
            })
        });
  } else {
    tmp = Utils.uiStr(authorGame._0);
  }
  var tmp$1;
  if (clientGame.TAG === /* Ok */0) {
    var game$1 = clientGame._0;
    tmp$1 = React.createElement(Index$Client, {
          game: game$1,
          player: Server.client,
          onAction: (function (param) {
              return handleAction(game$1, Server.client, param);
            })
        });
  } else {
    tmp$1 = Utils.uiStr(clientGame._0);
  }
  return React.createElement("div", undefined, React.createElement("div", {
                  className: "my-2 border rounded-md border-solid border-slate-500"
                }, tmp), React.createElement("div", {
                  className: "my-2 border rounded-md border-solid border-slate-500"
                }, tmp$1));
}

function getServerSideProps(_ctx) {
  return Promise.resolve({
              props: {
                authorGame: Belt_Result.map(Server.ProgressGameMap.get(Server.gamesInProgress, "GAME_ID"), (function (param) {
                        return Game.maskForPlayer(Server.author, param);
                      })),
                clientGame: Belt_Result.map(Server.ProgressGameMap.get(Server.gamesInProgress, "GAME_ID"), (function (param) {
                        return Game.maskForPlayer(Server.client, param);
                      }))
              }
            });
}

export {
  $$default ,
  $$default as default,
  getServerSideProps ,
  
}
/* react Not a pure module */
