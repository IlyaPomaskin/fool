// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";

function delay(send, msg, timeoutOpt, param) {
  var timeout = timeoutOpt !== undefined ? timeoutOpt : 100;
  return new Promise((function (resolve, param) {
                setTimeout((function (param) {
                        return resolve(Curry._1(send, msg));
                      }), timeout);
                
              }));
}

function autologin(sendMessage, playerId, sessionId, gameId, isOwnerOpt, param) {
  var isOwner = isOwnerOpt !== undefined ? isOwnerOpt : false;
  var match = React.useState(function () {
        return false;
      });
  var setIsLoaded = match[1];
  var isLoaded = match[0];
  React.useEffect((function () {
          if (!isLoaded) {
            var delayM = function (param, param$1, param$2) {
              return delay(sendMessage, param, param$1, param$2);
            };
            if (isOwner) {
              delayM({
                            TAG: /* Login */1,
                            _0: sessionId
                          }, undefined, undefined).then(function (param) {
                          return delayM({
                                      TAG: /* Lobby */3,
                                      _0: /* Create */0,
                                      _1: playerId,
                                      _2: ""
                                    }, undefined, undefined);
                        }).then(function (param) {
                        return delayM({
                                    TAG: /* Lobby */3,
                                    _0: /* Enter */1,
                                    _1: playerId,
                                    _2: gameId
                                  }, undefined, undefined);
                      }).then(function (param) {
                      return delayM({
                                  TAG: /* Lobby */3,
                                  _0: /* Ready */2,
                                  _1: playerId,
                                  _2: gameId
                                }, undefined, undefined);
                    }).then(function (param) {
                    return delayM({
                                TAG: /* Lobby */3,
                                _0: /* Start */3,
                                _1: playerId,
                                _2: gameId
                              }, 300, undefined);
                  });
            } else {
              delayM({
                        TAG: /* Login */1,
                        _0: sessionId
                      }, undefined, undefined).then(function (param) {
                      return delayM({
                                  TAG: /* Lobby */3,
                                  _0: /* Enter */1,
                                  _1: playerId,
                                  _2: gameId
                                }, 250, undefined);
                    }).then(function (param) {
                    return delayM({
                                TAG: /* Lobby */3,
                                _0: /* Ready */2,
                                _1: playerId,
                                _2: gameId
                              }, undefined, undefined);
                  });
            }
            Curry._1(setIsLoaded, (function (param) {
                    return true;
                  }));
          }
          
        }), [
        sendMessage,
        isLoaded
      ]);
  
}

function startServer(param) {
  var match = React.useState(function () {
        return false;
      });
  var setIsLoaded = match[1];
  var isLoaded = match[0];
  React.useEffect((function () {
          if (!isLoaded) {
            fetch("/api/server").then(function (param) {
                  Curry._1(setIsLoaded, (function (param) {
                          return true;
                        }));
                  return Promise.resolve(1);
                });
          }
          
        }), [isLoaded]);
  return isLoaded;
}

export {
  delay ,
  autologin ,
  startServer ,
  
}
/* react Not a pure module */
