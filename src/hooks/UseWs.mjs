// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Log from "../Log.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as Utils from "../Utils.mjs";
import * as React from "react";
import * as Serializer from "../Serializer.mjs";
import * as Belt_Result from "rescript/lib/es6/belt_Result.js";
import * as Webapi__WebSocket from "rescript-webapi/src/Webapi/Webapi__WebSocket.mjs";

function hook(onMessage) {
  var match = React.useState(function () {
        
      });
  var setError = match[1];
  var ws = React.useMemo((function () {
          return new WebSocket("ws://localhost:3001/ws");
        }), []);
  var sendMessage = React.useCallback((function (message) {
          console.log("ws", ws);
          ws.send(Serializer.serializeClientMessage(message));
          
        }), [ws]);
  React.useEffect((function () {
          ws.addEventListener("message", (function ($$event) {
                  Belt_Result.map(Belt_Result.flatMap(Utils.toResult(Webapi__WebSocket.messageAsText($$event), {
                                NAME: "SyntaxError",
                                VAL: "Message from server cannot be parsed as text"
                              }), Serializer.deserializeServerMessage), (function (message) {
                          if (message.TAG === /* ServerError */5) {
                            var msg = message._0;
                            Curry._1(setError, (function (param) {
                                    return msg;
                                  }));
                          } else {
                            Curry._1(setError, (function (param) {
                                    
                                  }));
                          }
                          return Curry._1(onMessage, message);
                        }));
                  
                }));
          ws.addEventListener("error", (function (param) {
                  return Log.error(["socket error"]);
                }));
          return (function (param) {
                    ws.close();
                    
                  });
        }), []);
  return {
          error: match[0],
          sendMessage: sendMessage
        };
}

export {
  hook ,
  
}
/* react Not a pure module */
