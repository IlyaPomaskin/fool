// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Utils from "../Utils.mjs";
import * as React from "react";
import * as GameUI from "../components/GameUI.mjs";
import * as CardDnd from "../components/CardDnd.mjs";
import * as TableUI from "../components/TableUI.mjs";
import * as ClientUI from "../components/ClientUI.mjs";
import * as GameUtils from "../fool/GameUtils.mjs";
import * as Belt_Result from "rescript/lib/es6/belt_Result.js";

function InProgressScreen$Parts$table(Props) {
  var game = Props.game;
  var player = Props.player;
  var isDefender = GameUtils.isDefender(game, player);
  var match = game.table;
  if (isDefender) {
    return React.createElement(TableUI.make, {
                className: "my-1",
                table: match
              });
  }
  var table = game.table;
  return React.createElement(CardDnd.Cards.DroppableContainer.make, {
              id: /* ToTable */0,
              axis: /* X */0,
              accept: (function (param) {
                  return Belt_Result.isOk(GameUtils.isValidMove(game, player));
                }),
              className: (function (draggingOver) {
                  return Utils.cx([draggingOver ? "bg-gradient-to-tl from-purple-200 to-pink-200 opacity-70" : ""]);
                }),
              children: table ? React.createElement(TableUI.make, {
                      className: "my-1",
                      table: table
                    }) : React.createElement("div", {
                      className: Utils.cx(["w-12 h-16 border rounded-md border-solid border-slate-500"])
                    })
            });
}

var Parts = {
  table: InProgressScreen$Parts$table
};

function InProgressScreen(Props) {
  var game = Props.game;
  var player = Props.player;
  var onMessage = Props.onMessage;
  var handleReorder = function (result) {
    if (result === undefined) {
      return ;
    }
    if (result.TAG === /* SameContainer */0) {
      return ;
    }
    var toCard = result._1;
    var byCard = result._0;
    if (toCard) {
      return Curry._1(onMessage, {
                  TAG: /* Progress */4,
                  _0: {
                    TAG: /* Beat */0,
                    _0: toCard._0,
                    _1: byCard
                  },
                  _1: player.id,
                  _2: game.gameId
                });
    } else {
      return Curry._1(onMessage, {
                  TAG: /* Progress */4,
                  _0: {
                    TAG: /* Move */1,
                    _0: byCard
                  },
                  _1: player.id,
                  _2: game.gameId
                });
    }
  };
  return React.createElement(CardDnd.Cards.DndManager.make, {
              onReorder: handleReorder,
              children: null
            }, React.createElement(GameUI.InProgressUI.make, {
                  game: game
                }), React.createElement("div", {
                  className: "m-1"
                }, React.createElement(InProgressScreen$Parts$table, {
                      game: game,
                      player: player
                    })), React.createElement("div", {
                  className: "flex flex-wrap"
                }, Utils.uiList(game.players, (function (p) {
                        return React.createElement(ClientUI.make, {
                                    className: "m-1 flex flex-col",
                                    player: p,
                                    isOwner: p.id === player.id,
                                    game: game,
                                    onMove: (function (move) {
                                        return Curry._1(onMessage, {
                                                    TAG: /* Progress */4,
                                                    _0: move,
                                                    _1: player.id,
                                                    _2: game.gameId
                                                  });
                                      }),
                                    key: p.id
                                  });
                      }))));
}

var make = InProgressScreen;

export {
  Parts ,
  make ,
  
}
/* react Not a pure module */
